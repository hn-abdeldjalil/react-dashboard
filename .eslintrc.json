{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
      // Allows for the parsing of JSX
    },
    "ecmaVersion": 2018,
    // Allows for the parsing of modern ECMAScript features
    "sourceType": "module"
    // Allows for the use of imports
  },
  "plugins": [
    "react",
    "@typescript-eslint"
  ],
  "rules": {
    // note you must disable the base rule as it can report incorrect errors
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": [
      "error"
    ],
    "jsx-a11y/href-no-hash": [
      "off"
    ],
    "react/jsx-props-no-spreading": [
      "off"
    ],
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".ts",
          ".tsx"
        ]
      }
    ],
    "no-console": [
      "error",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "multiline-ternary": 0,
    "no-unused-vars": "warn",
    "no-shadow": "error",
    "@typescript-eslint/no-unused-vars": "warn",
    "no-useless-constructor": "warn",
    "@typescript-eslint/no-useless-constructor": "warn",
    "react/prop-types": 1,
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 80,
        "tabWidth": 2,
        "comments": 80,
        "ignoreComments": false,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
      // Tells eslint-plugin-react to automatically detect the version of React to use
    },
    "import/extensions": [
      ".ts",
      ".tsx"
    ],
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".ts",
          ".tsx"
        ]
      }
    }
  }
}
